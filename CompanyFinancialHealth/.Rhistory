scale_colour_manual("",
breaks = c("TotalSubscriptions", "PaidSubscriptions"),
values = c("pink4", "pink1")) +
labs(y='') +   theme_minimal()
ggplot(df_normalized,aes(x=Date)) +
geom_line(aes(y=TotalSubscriptions, colour='TotalSubscriptions'),linetype=2) +
geom_point(aes(y=TotalSubscriptions),shape=11) +
geom_line(aes(y=PaidSubscriptions, colour='PaidSubscriptions'),linetype=6,col='pink1') +
geom_point(aes(y=PaidSubscriptions),shape=3) +
scale_colour_manual("",
breaks = c("TotalSubscriptions", "PaidSubscriptions"),
values = c("pink4", "pink1")) +
labs(y='') +   theme_minimal()
ggplot(df_normalized,aes(x=Date)) +
geom_line(aes(y=TotalSubscriptions, colour='TotalSubscriptions'),linetype=2) +
geom_point(aes(y=TotalSubscriptions),shape=11) +
geom_line(aes(y=PaidSubscriptions, colour='PaidSubscriptions'),linetype=6) +
geom_point(aes(y=PaidSubscriptions),shape=3) +
scale_colour_manual("",
breaks = c("TotalSubscriptions", "PaidSubscriptions"),
values = c("pink4", "pink1")) +
labs(y='') +   theme_minimal()
ggplot(df_normalized,aes(x=Date)) +
geom_line(aes(y=ContributionProfit,colour='ContributionProfit'),linetype=3) +
geom_point(aes(y=ContributionProfit),shape=15) +
geom_line(aes(y=ContributionMargin,colour='ContributionMargin'),linetype=2) +
geom_point(aes(y=ContributionMargin),shape=17) +
scale_colour_manual("",breaks=c("ContributionProfit","ContributionMargin"),
values=c("green4","cyan4")) +
labs(y='') + theme_minimal()
gContribution <-
ggplot(df_normalized,aes(x=Date)) +
geom_line(aes(y=ContributionProfit,colour='ContributionProfit'),linetype=3) +
geom_point(aes(y=ContributionProfit),shape=15) +
geom_line(aes(y=ContributionMargin,colour='ContributionMargin'),linetype=2) +
geom_point(aes(y=ContributionMargin),shape=17) +
scale_colour_manual("",breaks=c("ContributionProfit","ContributionMargin"),
values=c("green4","cyan4")) +
labs(y='') + theme_minimal()
gPerCustomer <-
ggplot(df_normalized,aes(x=Date)) +
geom_line(aes(y=CostPerCustomer,colour='CostPerCustomer'),linetype=3) +
geom_point(aes(y=CostPerCustomer),shape=17) +
geom_line(aes(y=RevenuePerCustomer,colour='RevenuePerCustomer'),linetype=2) +
geom_point(aes(y=RevenuePerCustomer),shape=15) +
geom_line(aes(y=EarningPerCustomer,colour='EarningPerCustomer'),linetype=6) +
geom_point(aes(y=EarningPerCustomer),shape=19) +
scale_colour_manual("",breaks=c("CostPerCustomer","RevenuePerCustomer","EarningPerCustomer"),
values=c("green4","cyan4","purple2")) +
labs(y='') + theme_minimal()
gSubscriptions <-
ggplot(df_normalized,aes(x=Date)) +
geom_line(aes(y=TotalSubscriptions, colour='TotalSubscriptions'),linetype=2) +
geom_point(aes(y=TotalSubscriptions),shape=11) +
geom_line(aes(y=PaidSubscriptions, colour='PaidSubscriptions'),linetype=6) +
geom_point(aes(y=PaidSubscriptions),shape=3) +
scale_colour_manual("", breaks = c("TotalSubscriptions", "PaidSubscriptions"),
values = c("pink4", "pink1")) +
labs(y='') +   theme_minimal()
plot_grid(gSubscriptions,gContribution, gPerCustomer,
labels=c("Subscriptions","Contibution", "Per Customer"),
ncol=3, nrow=1)
ggplot(df_normalized,aes(x=Date)) +
geom_line(aes(y=TotalSubscriptions, colour='TotalSubscriptions'),linetype=2) +
geom_point(aes(y=TotalSubscriptions),shape=11) +
geom_line(aes(y=PaidSubscriptions, colour='PaidSubscriptions'),linetype=6) +
geom_point(aes(y=PaidSubscriptions),shape=3) +
scale_colour_manual("", breaks = c("TotalSubscriptions", "PaidSubscriptions"),
values = c("pink4", "pink1")) +
labs(y='') + theme_minimal() + theme(legend.position="topleft")
ggplot(df_normalized,aes(x=Date)) +
geom_line(aes(y=TotalSubscriptions, colour='TotalSubscriptions'),linetype=2) +
geom_point(aes(y=TotalSubscriptions),shape=11) +
geom_line(aes(y=PaidSubscriptions, colour='PaidSubscriptions'),linetype=6) +
geom_point(aes(y=PaidSubscriptions),shape=3) +
scale_colour_manual("", breaks = c("TotalSubscriptions", "PaidSubscriptions"),
values = c("pink4", "pink1")) +
labs(y='') + theme_minimal()
ggplot(df_normalized,aes(x=Date)) +
geom_line(aes(y=TotalSubscriptions, colour='TotalSubscriptions'),linetype=2) +
geom_point(aes(y=TotalSubscriptions),shape=11) +
geom_line(aes(y=PaidSubscriptions, colour='PaidSubscriptions'),linetype=6) +
geom_point(aes(y=PaidSubscriptions),shape=3) +
scale_colour_manual("", breaks = c("TotalSubscriptions", "PaidSubscriptions"),
values = c("pink4", "pink1")) +theme(legend.position="topleft")
plot_grid(gSubscriptions,gContribution, gPerCustomer,
labels=c("Subscriptions","Contibution", "Per Customer"),
ncol=1, nrow=3)
colors()
ggplot(df_normalized,aes(x=Date)) +
geom_line(aes(y=ContributionProfit,colour='ContributionProfit'),linetype=3) +
geom_point(aes(y=ContributionProfit),shape=15) +
geom_line(aes(y=ContributionMargin,colour='ContributionMargin'),linetype=2) +
geom_point(aes(y=ContributionMargin),shape=17) +
scale_colour_manual("",breaks=c("ContributionProfit","ContributionMargin"),
values=c("wheat1","cyan4")) +
labs(y='') + theme_minimal()
ggplot(df_normalized,aes(x=Date)) +
geom_line(aes(y=ContributionProfit,colour='ContributionProfit'),linetype=3) +
geom_point(aes(y=ContributionProfit),shape=15) +
geom_line(aes(y=ContributionMargin,colour='ContributionMargin'),linetype=2) +
geom_point(aes(y=ContributionMargin),shape=17) +
scale_colour_manual("",breaks=c("ContributionProfit","ContributionMargin"),
values=c("wheat4","cyan4")) +
labs(y='') + theme_minimal()
gContribution <-
ggplot(df_normalized,aes(x=Date)) +
geom_line(aes(y=ContributionProfit,colour='ContributionProfit'),linetype=3) +
geom_point(aes(y=ContributionProfit),shape=15) +
geom_line(aes(y=ContributionMargin,colour='ContributionMargin'),linetype=2) +
geom_point(aes(y=ContributionMargin),shape=17) +
scale_colour_manual("",breaks=c("ContributionProfit","ContributionMargin"),
values=c("wheat4","cyan4")) +
labs(y='') + theme_minimal()
plot_grid(gSubscriptions,gContribution, gPerCustomer,
labels=c("Subscriptions","Contibution", "Per Customer"),
ncol=1, nrow=3)
colors()
ggplot(df_normalized,aes(x=Date)) +
geom_line(aes(y=ContributionProfit,colour='ContributionProfit'),linetype=3) +
geom_point(aes(y=ContributionProfit),shape=15) +
geom_line(aes(y=ContributionMargin,colour='ContributionMargin'),linetype=2) +
geom_point(aes(y=ContributionMargin),shape=17) +
scale_colour_manual("",breaks=c("ContributionProfit","ContributionMargin"),
values=c("rosybrown","cyan4")) +
labs(y='') + theme_minimal()
ggplot(df_normalized,aes(x=Date)) +
geom_line(aes(y=ContributionProfit,colour='ContributionProfit'),linetype=3) +
geom_point(aes(y=ContributionProfit),shape=15) +
geom_line(aes(y=ContributionMargin,colour='ContributionMargin'),linetype=2) +
geom_point(aes(y=ContributionMargin),shape=17) +
scale_colour_manual("",breaks=c("ContributionProfit","ContributionMargin"),
values=c("rosybrown4","cyan4")) +
labs(y='') + theme_minimal()
gContribution <-
ggplot(df_normalized,aes(x=Date)) +
geom_line(aes(y=ContributionProfit,colour='ContributionProfit'),linetype=3) +
geom_point(aes(y=ContributionProfit),shape=15) +
geom_line(aes(y=ContributionMargin,colour='ContributionMargin'),linetype=2) +
geom_point(aes(y=ContributionMargin),shape=17) +
scale_colour_manual("",breaks=c("ContributionProfit","ContributionMargin"),
values=c("rosybrown4","cyan4")) +
labs(y='') + theme_minimal()
plot_grid(gSubscriptions,gContribution, gPerCustomer,
labels=c("Subscriptions","Contibution", "Per Customer"),
ncol=1, nrow=3)
library(readxl)
library(ggplot2)
library(dplyr)
library(cowplot)
#load data
df <- read_excel("Netflix_Data.xlsx", sheet='Dados')
colnames(df) <- c('Time','TotalSubscriptions','PaidSubscriptions','FreeTrails','Revenue',
'CostRevenues','Marketing','ContributionProfit','ContributionMargin',
'CostPerCustomer','RevenuePerCustomer','EarningPerCustomer','Segment')
##format field Time
fGetYear <- function(sTime) {
return(strsplit(sTime,',')[[1]][2])
}
df$Year <- unlist(lapply(df$Time, fGetYear))
df$Year <- as.factor(df$Year)
fGetMonth <- function(sTime) {
return(strsplit(sTime,' ')[[1]][1])
}
df$Month <- unlist(lapply(df$Time, fGetMonth))
df$Month <- as.factor(df$Month)
fGetDay <- function(sTime) {
return(strsplit(strsplit(sTime,' ')[[1]][2],',')[[1]][1])
}
df$Day <- unlist(lapply(df$Time, fGetDay))
df$Day <- as.factor(df$Day)
fGetDate <- function(sTime) {
sYear <- fGetYear(sTime)
sMonth <- fGetMonth(sTime)
if(sMonth=='December'){
sMonth <- '12'
} else if(sMonth=='March'){
sMonth <- '03'
} else if(sMonth=='June'){
sMonth <- '06'
} else {
sMonth <- '09'
}
sDay <- fGetDay(sTime)
return(paste(sDay,sMonth,sYear, sep=''))
}
df$Date <- unlist(lapply(df$Time, fGetDate))
df$Date <- as.Date(df$Date, "%d%m%Y")
df$Time <- NULL
##remove fields with cardinality = 1
unique(df$Segment)
df$Segment <- NULL
##date normalized
df_normalized <- data.frame(df)
?tracemem(df_normalized)==tracemem(df)
df_normalized[,1:11] <- scale(df[,1:11])
View(df)
# Carregando os dados
dataset1 = read.csv("dados/alturas.csv")
str(dataset1)
View(dataset1)
View(df)
str(df)
wilcox.test(TotalSubscriptions~PaidSubscriptions, data=df)
?wilcox.test
wilcox.test(TotalSubscriptions ~ PaidSubscriptions, data=df)
wilcox.test(df$TotalSubscriptions,df$PaidSubscriptions)
wilcox.test(df$TotalSubscriptions, df$PaidSubscriptions, conf.level=0.95)
df <- read_excel("Netflix_Data.xlsx", sheet='Dados')
colnames(df) <- c('Time','TotalSubscriptions','PaidSubscriptions','FreeTrails','Revenue',
'CostRevenues','Marketing','ContributionProfit','ContributionMargin',
'CostPerCustomer','RevenuePerCustomer','EarningPerCustomer','Segment')
str(df)
#packages
library(readxl)
library(ggplot2)
library(dplyr)
library(cowplot)
#load data
df <- read_excel("Netflix_Data.xlsx", sheet='Dados')
colnames(df) <- c('Time','TotalSubscriptions','PaidSubscriptions','FreeTrails','Revenue',
'CostRevenues','Marketing','ContributionProfit','ContributionMargin',
'CostPerCustomer','RevenuePerCustomer','EarningPerCustomer','Segment')
str(df)
##format field Time
fGetYear <- function(sTime) {
return(strsplit(sTime,',')[[1]][2])
}
df$Year <- unlist(lapply(df$Time, fGetYear))
df$Year <- as.factor(df$Year)
fGetMonth <- function(sTime) {
return(strsplit(sTime,' ')[[1]][1])
}
df$Month <- unlist(lapply(df$Time, fGetMonth))
df$Month <- as.factor(df$Month)
fGetDay <- function(sTime) {
return(strsplit(strsplit(sTime,' ')[[1]][2],',')[[1]][1])
}
df$Day <- unlist(lapply(df$Time, fGetDay))
df$Day <- as.factor(df$Day)
fGetDate <- function(sTime) {
sYear <- fGetYear(sTime)
sMonth <- fGetMonth(sTime)
if(sMonth=='December'){
sMonth <- '12'
} else if(sMonth=='March'){
sMonth <- '03'
} else if(sMonth=='June'){
sMonth <- '06'
} else {
sMonth <- '09'
}
sDay <- fGetDay(sTime)
return(paste(sDay,sMonth,sYear, sep=''))
}
df$Date <- unlist(lapply(df$Time, fGetDate))
df$Date <- as.Date(df$Date, "%d%m%Y")
df$Time <- NULL
##remove fields with cardinality = 1
unique(df$Segment)
df$Segment <- NULL
##date normalized
df_normalized <- data.frame(df)
?tracemem(df_normalized)==tracemem(df)
df_normalized[,1:11] <- scale(df[,1:11])
wilcox.test(df$TotalSubscriptions, df$PaidSubscriptions, conf.level=0.95)
str(df)
wilcox.test(df$TotalSubscriptions, df$PaidSubscriptions, conf.level=0.95)
# Test t
t.test(df$TotalSubscriptions, df$PaidSubscriptions, conf.level=0.95)
str(df)
t.test(df$Revenue, conf.level=0.95)
str(df)
SIGN.test(df$Marketing, conf.level=0.95)
SIGN.test(df$Marketing, conf.level=0.95)
wilcox.test(df$Marketing, conf.level=0.95)
#packages
library(readxl)
library(ggplot2)
library(dplyr)
library(cowplot)
#load data
df <- read_excel("Netflix_Data.xlsx", sheet='Dados')
colnames(df) <- c('Time','TotalSubscriptions','PaidSubscriptions','FreeTrails','Revenue',
'CostRevenues','Marketing','ContributionProfit','ContributionMargin',
'CostPerCustomer','RevenuePerCustomer','EarningPerCustomer','Segment')
##format field Time
fGetYear <- function(sTime) {
return(strsplit(sTime,',')[[1]][2])
}
df$Year <- unlist(lapply(df$Time, fGetYear))
df$Year <- as.factor(df$Year)
fGetMonth <- function(sTime) {
return(strsplit(sTime,' ')[[1]][1])
}
df$Month <- unlist(lapply(df$Time, fGetMonth))
df$Month <- as.factor(df$Month)
fGetDay <- function(sTime) {
return(strsplit(strsplit(sTime,' ')[[1]][2],',')[[1]][1])
}
df$Day <- unlist(lapply(df$Time, fGetDay))
df$Day <- as.factor(df$Day)
fGetDate <- function(sTime) {
sYear <- fGetYear(sTime)
sMonth <- fGetMonth(sTime)
if(sMonth=='December'){
sMonth <- '12'
} else if(sMonth=='March'){
sMonth <- '03'
} else if(sMonth=='June'){
sMonth <- '06'
} else {
sMonth <- '09'
}
sDay <- fGetDay(sTime)
return(paste(sDay,sMonth,sYear, sep=''))
}
df$Date <- unlist(lapply(df$Time, fGetDate))
df$Date <- as.Date(df$Date, "%d%m%Y")
df$Time <- NULL
##remove fields with cardinality = 1
unique(df$Segment)
df$Segment <- NULL
##date normalized
df_normalized <- data.frame(df)
?tracemem(df_normalized)==tracemem(df)
df_normalized[,1:11] <- scale(df[,1:11])
str(df)
boxplot(df$TotalSubscriptions,df$Month,xlab='Month',ylab='TotalSubscriptions')
boxplot(df$TotalSubscriptions,factor(df$Month),xlab='Month',ylab='TotalSubscriptions')
boxplot(df$TotalSubscriptions,factor(df$Year),xlab='Month',ylab='TotalSubscriptions')
boxplot(df$TotalSubscriptions~factor(df$Year),xlab='Month',ylab='TotalSubscriptions')
boxplot(df$TotalSubscriptions~factor(df$Month),xlab='Month',ylab='TotalSubscriptions')
month_aov <- aov(df$TotalSubscriptions~factor(df$Month))
year_aov <- aov(df$TotalSubscriptions~factor(df$Year))
summary(month_aov)
year_month_aov <- aov(df$TotalSubscriptions~factor(df$Month)*factor(df$Year))
summary(year_month_aov)
month_aov <- aov(df$TotalSubscriptions~factor(df$Month))
year_aov <- aov(df$TotalSubscriptions~factor(df$Year))
year_month_aov <- aov(df$TotalSubscriptions~factor(df$Month)*factor(df$Year))
summary(month_aov)
summary(year_aov)
summary(year_month_aov)
month_aov <- aov(df$TotalSubscriptions~factor(df$Month))
summary(month_aov)
str(df)
month_aov <- aov(df$TotalSubscriptions~factor(df$Date))
summary(month_aov)
year_aov <- aov(df$TotalSubscriptions~factor(df$Year))
summary(year_aov)
wilcox.test(df$Marketing, conf.level=0.95)
library(readxl)
library(ggplot2)
library(dplyr)
library(cowplot)
#load data
df <- read_excel("Netflix_Data.xlsx", sheet='Dados')
colnames(df) <- c('Time','TotalSubscriptions','PaidSubscriptions','FreeTrails','Revenue',
'CostRevenues','Marketing','ContributionProfit','ContributionMargin',
'CostPerCustomer','RevenuePerCustomer','EarningPerCustomer','Segment')
str(df)
##format field Time
fGetYear <- function(sTime) {
return(strsplit(sTime,',')[[1]][2])
}
df$Year <- unlist(lapply(df$Time, fGetYear))
df$Year <- as.factor(df$Year)
fGetMonth <- function(sTime) {
return(strsplit(sTime,' ')[[1]][1])
}
df$Month <- unlist(lapply(df$Time, fGetMonth))
df$Month <- as.factor(df$Month)
fGetDay <- function(sTime) {
return(strsplit(strsplit(sTime,' ')[[1]][2],',')[[1]][1])
}
df$Day <- unlist(lapply(df$Time, fGetDay))
df$Day <- as.factor(df$Day)
fGetDate <- function(sTime) {
sYear <- fGetYear(sTime)
sMonth <- fGetMonth(sTime)
if(sMonth=='December'){
sMonth <- '12'
} else if(sMonth=='March'){
sMonth <- '03'
} else if(sMonth=='June'){
sMonth <- '06'
} else {
sMonth <- '09'
}
sDay <- fGetDay(sTime)
return(paste(sDay,sMonth,sYear, sep=''))
}
df$Date <- unlist(lapply(df$Time, fGetDate))
df$Date <- as.Date(df$Date, "%d%m%Y")
df$Time <- NULL
##remove fields with cardinality = 1
unique(df$Segment)
df$Segment <- NULL
##date nor
##date normalized
df_normalized <- data.frame(df)
?tracemem(df_normalized)==tracemem(df)
df_normalized[,1:11] <- scale(df[,1:11])
wilcox.test(df$Marketing, conf.level=0.95)
wilcox.test(df$TotalSubscriptions, df$PaidSubscriptions, conf.level=0.95)
t.test(df$TotalSubscriptions, df$PaidSubscriptions, conf.level=0.95)
?t.test
t.test(df$Revenue, conf.level=0.95, mu=70000)
t.test(df$Revenue, conf.level=0.95, mu=70000, alternative=c('greater'))
t.test(df$Revenue, conf.level=0.95, mu=70000, alternative=c('less'))
year_aov <- aov(df$TotalSubscriptions~factor(df$Year))
summary(year_aov)
summary(df[,c('Year','Month','Day')])
summary(df[,c('TotalSubscriptions','PaidSubscriptions','FreeTrails')])
data.frame(TotalSubscriptions=c(sd(df$TotalSubscriptions),var(df$TotalSubscriptions)),
PaidSubscriptions=c(sd(df$PaidSubscriptions),var(df$PaidSubscriptions)),
FreeTrails=c(sd(df$FreeTrails),var(df$FreeTrails)),
row.names = c('Std Deviation','Variance'))
summary(df[,c('TotalSubscriptions','PaidSubscriptions','FreeTrails')])+
data.frame(TotalSubscriptions=c(sd(df$TotalSubscriptions),var(df$TotalSubscriptions)),
PaidSubscriptions=c(sd(df$PaidSubscriptions),var(df$PaidSubscriptions)),
FreeTrails=c(sd(df$FreeTrails),var(df$FreeTrails)),
row.names = c('Std Deviation','Variance'))
##Individual Analysis
### For Total Subscriptions
gTotalSubs <-
ggplot(df,aes(x=Month,y=TotalSubscriptions,group=Year)) +
geom_line(aes(linetype=Year)) +
geom_point(aes(shape=Year)) +
scale_x_discrete(limits=c('March','June','September','December')) +
theme_minimal()
### For Paid Subscriptions
gPaidSubs <-
ggplot(df,aes(x=Month,y=PaidSubscriptions,group=Year)) +
geom_line(aes(linetype=Year)) +
geom_point(aes(shape=Year)) +
scale_x_discrete(limits=c('March','June','September','December')) +
theme_minimal()
### For Contribution Profit
gContribProfit <-
ggplot(df,aes(x=Month,y=ContributionProfit,group=Year)) +
geom_line(aes(linetype=Year)) +
geom_point(aes(shape=Year)) +
scale_x_discrete(limits=c('March','June','September','December')) +
theme_minimal()
### For Contribution Margin
gContribMargin <-
ggplot(df,aes(x=Month,y=ContributionMargin,group=Year)) +
geom_line(aes(linetype=Year)) +
geom_point(aes(shape=Year)) +
scale_x_discrete(limits=c('March','June','September','December')) +
theme_minimal()
### For Cost Per Customer
gCostCustomer <-
ggplot(df,aes(x=Month,y=CostPerCustomer,group=Year)) +
geom_line(aes(linetype=Year)) +
geom_point(aes(shape=Year)) +
scale_x_discrete(limits=c('March','June','September','December')) +
theme_minimal()
### For Revenue Per Customer
gRevenueCustomer <-
ggplot(df,aes(x=Month,y=RevenuePerCustomer,group=Year)) +
geom_line(aes(linetype=Year)) +
geom_point(aes(shape=Year)) +
scale_x_discrete(limits=c('March','June','September','December')) +
theme_minimal()
### For Earning Per Customer
gEarningCustomer <-
ggplot(df,aes(x=Month,y=EarningPerCustomer,group=Year)) +
geom_line(aes(linetype=Year)) +
geom_point(aes(shape=Year)) +
scale_x_discrete(limits=c('March','June','September','December')) +
theme_minimal()
plot_grid(gTotalSubs, gPaidSubs, gContribProfit, gContribMargin,
gCostCustomer, gRevenueCustomer, gEarningCustomer,
labels=c("TSubs", "PSubs", "Profit", "Margin",
"CostCusto", "RevCusto", "EarnCusto"),
ncol=3, nrow=3)
##Double Analysis
gSubscriptions <-
ggplot(df_normalized,aes(x=Date)) +
geom_line(aes(y=TotalSubscriptions, colour='TotalSubscriptions'),linetype=2) +
geom_point(aes(y=TotalSubscriptions),shape=11) +
geom_line(aes(y=PaidSubscriptions, colour='PaidSubscriptions'),linetype=6) +
geom_point(aes(y=PaidSubscriptions),shape=3) +
scale_colour_manual("", breaks = c("TotalSubscriptions", "PaidSubscriptions"),
values = c("pink4", "pink1")) +
labs(y='') + theme_minimal()
gContribution <-
ggplot(df_normalized,aes(x=Date)) +
geom_line(aes(y=ContributionProfit,colour='ContributionProfit'),linetype=3) +
geom_point(aes(y=ContributionProfit),shape=15) +
geom_line(aes(y=ContributionMargin,colour='ContributionMargin'),linetype=2) +
geom_point(aes(y=ContributionMargin),shape=17) +
scale_colour_manual("",breaks=c("ContributionProfit","ContributionMargin"),
values=c("rosybrown4","cyan4")) +
labs(y='') + theme_minimal()
gPerCustomer <-
ggplot(df_normalized,aes(x=Date)) +
geom_line(aes(y=CostPerCustomer,colour='CostPerCustomer'),linetype=3) +
geom_point(aes(y=CostPerCustomer),shape=17) +
geom_line(aes(y=RevenuePerCustomer,colour='RevenuePerCustomer'),linetype=2) +
geom_point(aes(y=RevenuePerCustomer),shape=15) +
geom_line(aes(y=EarningPerCustomer,colour='EarningPerCustomer'),linetype=6) +
geom_point(aes(y=EarningPerCustomer),shape=19) +
scale_colour_manual("",breaks=c("CostPerCustomer","RevenuePerCustomer","EarningPerCustomer"),
values=c("green4","cyan4","purple2")) +
labs(y='') + theme_minimal()
plot_grid(gSubscriptions,gContribution, gPerCustomer,
labels=c("Subscriptions","Contibution", "Per Customer"),
ncol=1, nrow=3)
